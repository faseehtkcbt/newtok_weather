import 'package:newtok_weather/features/user/weather/data/model/condition_model.dart';
import 'package:newtok_weather/features/user/weather/domain/entity/current_weather_entity.dart';

class CurrentWeatherModel extends CurrentWeatherEntity {
  CurrentWeatherModel(
      {required super.lastUpdatedEpoch,
      required super.lastUpdated,
      required super.tempC,
      required super.tempF,
      required super.isDay,
      required super.condition,
      required super.windMph,
      required super.windKph,
      required super.windDegree,
      required super.windDir,
      required super.pressureMb,
      required super.pressureIn,
      required super.precipMm,
      required super.precipIn,
      required super.humidity,
      required super.cloud,
      required super.feelslikeC,
      required super.feelslikeF,
      required super.windchillC,
      required super.windchillF,
      required super.heatindexC,
      required super.heatindexF,
      required super.dewpointC,
      required super.dewpointF,
      required super.visKm,
      required super.visMiles,
      required super.uv,
      required super.gustMph,
      required super.gustKph});

  factory CurrentWeatherModel.fromJson(Map<String, dynamic> map) {
    return CurrentWeatherModel(
      lastUpdatedEpoch: map['last_updated_epoch'] ?? 0,
      lastUpdated: map['last_updated'] ?? '',
      tempC: map['temp_c']?.toDouble() ?? 0.0,
      tempF: map['temp_f']?.toDouble() ?? 0.0,
      isDay: map['is_day'] == 1,
      condition: ConditionModel.fromJson(map['condition']),
      windMph: map['wind_mph']?.toDouble() ?? 0.0,
      windKph: map['wind_kph']?.toDouble() ?? 0.0,
      windDegree: map['wind_degree'] ?? 0,
      windDir: map['wind_dir'] ?? '',
      pressureMb: map['pressure_mb']?.toDouble() ?? 0.0,
      pressureIn: map['pressure_in']?.toDouble() ?? 0.0,
      precipMm: map['precip_mm']?.toDouble() ?? 0.0,
      precipIn: map['precip_in']?.toDouble() ?? 0.0,
      humidity: map['humidity'] ?? 0,
      cloud: map['cloud'] ?? 0,
      feelslikeC: map['feelslike_c']?.toDouble() ?? 0.0,
      feelslikeF: map['feelslike_f']?.toDouble() ?? 0.0,
      windchillC: map['windchill_c']?.toDouble() ?? 0.0,
      windchillF: map['windchill_f']?.toDouble() ?? 0.0,
      heatindexC: map['heatindex_c']?.toDouble() ?? 0.0,
      heatindexF: map['heatindex_f']?.toDouble() ?? 0.0,
      dewpointC: map['dewpoint_c']?.toDouble() ?? 0.0,
      dewpointF: map['dewpoint_f']?.toDouble() ?? 0.0,
      visKm: map['vis_km']?.toDouble() ?? 0.0,
      visMiles: map['vis_miles']?.toDouble() ?? 0.0,
      uv: map['uv']?.toDouble() ?? 0.0,
      gustMph: map['gust_mph']?.toDouble() ?? 0.0,
      gustKph: map['gust_kph']?.toDouble() ?? 0.0,
    );
  }
}
